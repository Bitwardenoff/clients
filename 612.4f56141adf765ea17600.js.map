{"version":3,"file":"612.4f56141adf765ea17600.js","mappings":"mLACYA,E,+GAAZ,SAAYA,GACV,kBACD,CAFD,CAAYA,IAAAA,EAAe,K,kjBCyD3B,SACE,gC,gBAKA,mCAAsB,S,gBAAsB,QAC9C,uB,MAJI,6CAGoB,qC,uBAGtB,aAAqC,S,gBAA6B,S,MAA7B,4C,0BAWjC,iBACE,uCAAyC,S,gBAA6B,QACtE,uCACE,2CAA0C,SAAe,QAC3D,+BACA,yCACE,6CAAgC,UAAgB,QAClD,+BACA,yCACF,8B,yBAR2C,2CAEjC,kDAAoC,0BAGpC,oCAA0B,2BAEtB,2C,2BAlBlB,qBACE,8BACE,kCACE,uCAAY,S,gBAAwB,QACpC,wCAAY,U,iBAAqB,QACjC,yCAAY,U,iBAAqB,QACjC,yCAAY,U,iBAAoB,QAClC,6BACF,2BACA,gCACE,+CAUF,2BACF,0B,sBAlBkB,uCACA,qCACA,qCACA,qCAIW,kC,wBAsB3B,gB,sBAEE,mC,yCAZJ,wBAME,2DAAS,QAAAC,YAAW,GAAM,IAI1B,wCAMA,kCAAM,S,gBAAuB,QAC/B,uB,qCAfE,oCAA4B,gCAYzB,iCAEG,qC,2BAxCV,SACE,sCACA,gDAsBA,2CAkBF,uB,qBAzCM,mDACQ,iDA8BT,0C,2GCzEE,MAAMC,UAAwB,IAQnCC,YACUC,EACAC,EACRC,EACAC,EACAC,EACAC,EACQC,EACRC,EACQC,EACAC,EACAC,EACAC,EACRC,GAEAC,MACEX,EACAC,EACAC,EACAC,EACAE,EACAK,GApBM,KAAAZ,WAAAA,EACA,KAAAC,MAAAA,EAKA,KAAAK,OAAAA,EAEA,KAAAE,aAAAA,EACA,KAAAC,oBAAAA,EACA,KAAAC,wBAAAA,EACA,KAAAC,gBAAAA,EAnBV,KAAAG,eAAiB,aAIT,KAAAC,kBAAoB,IAAIC,IACxB,KAAAC,SAAW,IAAIC,EAAA,CAyBvB,CAEMC,W,yCACJC,KAAKnB,MAAMoB,OACRC,MACC,EAAAC,EAAA,IAAiBF,GAAW,EAAD,gCACzBD,KAAKI,eAAiBH,EAAOG,eAC7BJ,KAAKK,mBAAqBL,KAAKX,oBAAoBiB,IAAIN,KAAKI,gBACnC,MAArBJ,KAAKK,cAAyBL,KAAKK,aAAaE,gBAI9CP,KAAKQ,aAHHR,KAAKd,OAAOuB,SAAS,CAAC,iBAAkBT,KAAKI,gBAIvD,OACA,EAAAM,EAAA,GAAUV,KAAKH,WAEhBc,WACL,G,CAEMH,O,yCAOJ,UANuBR,KAAKV,wBAAwBsB,YAAYZ,KAAKI,iBAC5DS,KAAKC,SAASC,IACrB,MAAMC,EAAOhB,KAAKZ,aAAa6B,UAAUF,GACzCf,KAAKL,kBAAkBuB,IAAIH,EAAEI,OAAQ,CAAEH,KAAMA,EAAMI,MAAOL,EAAEK,OAAQ,IAGlC,MAAhCpB,KAAKK,aAAagB,WACpB,IAEE,GACc,aAFSrB,KAAKT,gBAAgBe,IAAIN,KAAKK,aAAagB,qBAGzDrB,KAAKT,gBAAgBe,IAAIN,KAAKK,aAAagB,aAAaC,eAC/D,QACoCtB,KAAKpB,WAAW2C,iBAClDvB,KAAKK,aAAagB,aAEER,KAAKC,SAASC,IAClC,MAAMC,EAAOhB,KAAKZ,aAAa6B,UAAUF,GACzCf,KAAKL,kBAAkBuB,IAAIH,EAAEI,OAAQ,CACnCH,KAAM,GAAGA,MAAShB,KAAKK,aAAamB,gBACpCJ,MAAOL,EAAEK,OACT,G,EAGN,MAAOK,GACPzB,KAAKb,WAAWuC,QAAQD,E,OAItBzB,KAAKvB,YAAW,GACtBuB,KAAK2B,QAAS,CAChB,G,CAEUC,cAAcC,EAAmBC,EAAiBC,GAC1D,OAAO/B,KAAKpB,WAAWoD,sBACrBhC,KAAKI,eACLyB,EACAC,EACAC,EAEJ,CAEUE,YAAYC,EAAkBf,GACtC,GAAwB,MAApBe,EAAEC,eACJ,MAAO,iBAAiBD,EAAEC,iBAG5B,GAAc,MAAVhB,EAAgB,CAClB,GAAInB,KAAKL,kBAAkByC,IAAIjB,GAC7B,OAAOnB,KAAKL,kBAAkBW,IAAIa,GAGpC,GAAoB,MAAhBe,EAAEb,YAAsBa,EAAEb,aAAerB,KAAKK,aAAagB,WAC7D,MAAO,CACLL,KAAMhB,KAAKK,aAAamB,a,CAK9B,OAAoB,MAAhBU,EAAEG,WACG,CACLrB,KAAMxC,EAAgB0D,EAAEG,aAIrB,IACT,CAEAC,cACEtC,KAAKH,SAAS0C,OACdvC,KAAKH,SAAS2C,UAChB,E,iCA1HW9D,GAAe,qJ,mBAAfA,EAAe,wrC,GAAA,MDzB5B,iBACE,8BAAI,S,gBAAwB,QAC5B,iCACE,4CACE,0CAAW,U,iBAAmB,QAC9B,yCAIE,uDAAmB,0CACI,CAAI,I,iBAL7B,QAOF,2BACA,sCAAsB,cAAC,QACvB,8CACE,2CAAW,U,iBAAiB,QAC5B,yCAIE,qDAAiB,0CACM,CAAI,I,iBAL7B,QAOF,2BACA,wCACE,0CAKE,iCAAS,EAAAD,YAAW,EAAK,IAGzB,U,iBACF,QACF,2BACA,wCACE,0CAKE,iCAAS,EAAAgE,cAAc,IAGvB,wCAAM,U,iBAAqB,QAC3B,uCAQF,6BACF,2BACF,yBACF,uBACA,iDAQA,iDA2CA,gB,mCA5GM,wCAGW,oCAIT,uDACA,yBAMS,mCAIT,qDACA,uBAIe,gDAOf,+CAEA,8DAGc,+CAKd,gDAA2C,8CAIrC,sCAIJ,2DASK,iCAQA,+B,kkBE1Db,yB,gBACE,S,gBACF,S,MAF4B,qCAC1B,gE,0CAaQ,SACE,4CAAyB,+EAAS,QAAAC,aAAA,GAAe,I,gBAAkC,SAEjF,QACJ,iC,mCAHqD,8CAAgC,sB,4BAKnF,4CAAM,SAAY,QACpB,2B,+BADQ,sB,yBAER,SACE,4C,gBAMA,+CAAsB,S,gBAAqB,QAC7C,mC,MAJI,4CAGoB,oC,wBAExB,SACE,4C,gBAMA,+CAAsB,S,gBAA0B,QAClD,mC,MAJI,iDAGoB,yC,2BA7B5B,cACE,yCACE,uDACF,gCACA,yCACE,4DAKA,wEAGA,6DASA,6DASA,0CACA,6CAAO,UAAgB,QACzB,iCACA,2CACE,+CACE,U,oCACF,QACF,iCACF,gC,gDArCoB,2BAGD,6DAA2C,cAQ3C,yDASA,wCAUR,2BAIL,2H,4BA1CZ,SACE,2C,gBACE,S,kCACF,QACA,qCACE,sCACE,kDAwCF,6BACF,2BACF,0B,sBA/C6B,2DAA6C,yBACtE,uGAIoB,mC,4BAV1B,iBACE,gDAGA,mDAiDF,uB,qBApD+D,yCAG9C,uC,oBCUV,MAAMC,WAAwC,IAGnDhE,YACEiE,EACAC,EACAC,EACAC,EACAC,EACQ3D,EACAR,EACRoE,GAEAxD,MACEmD,EACAC,EACAC,EACAC,EACAC,EACAC,GAVM,KAAA5D,oBAAAA,EACA,KAAAR,MAAAA,CAWV,CAEAkB,WAEEC,KAAKnB,MAAMqE,OAAOA,OAAOjD,OAAOU,WAAiBV,GAAW,mCAC1DD,KAAKK,mBAAqBL,KAAKX,oBAAoBiB,IAAIL,EAAOG,gBAC9DJ,KAAKmD,wBAA0BnD,KAAK4C,cAAcQ,eAC5CpD,KAAKqD,aACb,KACF,CAEAC,gBACE,OAAOtD,KAAK4C,cAAcW,6BAA6BvD,KAAKK,aAAamD,GAC3E,CAEAC,gBAAgBC,GACd,OAAO1D,KAAKmD,kBAAkBQ,MAAMC,GAAMA,EAAEJ,KAAOE,EAAEF,IACvD,E,kCAtCWb,IAA+B,4F,oBAA/BA,GAA+B,q0BDrB5C,iBACE,8BAAI,S,gBAAqC,QAC3C,sBACA,2BAAG,S,gBAAyC,QAC5C,oCAAyE,iCAAS,EAAAnC,MAAM,IACtF,U,iBACF,QACA,wCAsDA,2DACA,gB,MA7DM,oDAEH,wDACkD,oCACnD,gEAEiB,mC,iaEJf,iBACE,mC,gBAKA,sCAAsB,S,gBAAsB,QAC9C,2B,MAJI,6CAGoB,qC,wBAK5B,eACE,+B,gBAKA,kCAAsB,S,gBAAsB,QAC9C,uB,MAJI,6CAGoB,qC,wBAGtB,yB,gBACE,S,gBACF,S,MAF4B,qCAC1B,2D,wBAgBQ,SACE,4C,gBAMA,8CAAsB,S,gBAAqB,QAC7C,mC,MAJI,4CAGoB,oC,wBAExB,SACE,4C,gBAMA,8CAAsB,S,gBAA0B,QAClD,mC,MAJI,iDAGoB,yC,2BAMxB,gBAOE,S,gBAA2B,S,0CAL3B,2CAKA,+D,2CArCN,cACE,yCACE,uDACF,gCACA,yCACE,0CAAyB,uEAAS,QAAAkC,aAAA,GAAe,I,iBAAkC,UAEjF,QACF,6DASA,6DASA,0CACA,6CAAO,UAAgB,QACzB,iCACA,2CACE,mDASF,iCACF,8B,wCAtCoB,2BAGmC,+CAAgC,uBAGpE,yDASA,wCAUR,2BAQJ,6C,4BAzCb,SACE,2C,gBACE,S,kCACF,QACA,sCACE,sCACE,iDAyCF,6BACF,2BACF,0B,sBAhD6B,sDACzB,kGAIoB,mC,4BAV1B,iBACE,gDAGA,mDAkDF,uB,qBArD+D,yCAG9C,uC,oBCNV,MAAMmB,WAAyC,KACpDlF,YACEiE,EACAE,EACAC,EACAC,EACQnE,EACRM,EACA8D,EACQ5D,GAERI,MACEmD,EACAE,EACAC,EACAC,EACA7D,EACA8D,GAXM,KAAApE,MAAAA,EAGA,KAAAQ,oBAAAA,CAUV,CAEMU,W,0GAEJC,KAAKnB,MAAMqE,OAAOA,OAAOjD,OAAOU,WAAiBV,GAAW,mCAC1DD,KAAKK,mBAAqBL,KAAKX,oBAAoBiB,IAAIL,EAAOG,sBACxD,EAAML,SAAQ,UACtB,KACF,G,CAEAuD,gBACE,OAAOtD,KAAK4C,cAAcW,6BAA6BvD,KAAKK,aAAamD,GAC3E,E,kCA/BWK,IAAgC,4F,oBAAhCA,GAAgC,y2BDpB7C,iBACE,8BACE,S,gBACA,0BAQF,wBACF,sBACA,2BAAG,U,iBAAoC,QACvC,wCAQA,wCAuDA,2DACA,gB,MA5EI,iEACQ,8CAUT,oDACG,+CAQa,mC,6ZEnBf,iBACE,mC,gBAKA,sCAAsB,S,gBAAsB,QAC9C,2B,MAJI,6CAGoB,qC,wBAK5B,eACE,+B,gBAKA,kCAAsB,S,gBAAsB,QAC9C,uB,MAJI,6CAGoB,qC,wBAGtB,yB,gBACE,S,gBACF,S,MAF4B,qCAC1B,+D,0CAaQ,SACE,4CAAyB,+EAAS,QAAAnB,aAAA,GAAe,I,gBAAkC,SAEjF,QACJ,iC,mCAHqD,8CAAgC,sB,4BAKnF,4CAAM,SAAY,QACpB,2B,+BADQ,sB,yBAER,SACE,4C,gBAMA,8CAAsB,S,gBAAqB,QAC7C,mC,MAJI,4CAGoB,oC,wBAExB,SACE,4C,gBAMA,8CAAsB,S,gBAA0B,QAClD,mC,MAJI,iDAGoB,yC,2BA7B5B,cACE,yCACE,uDACF,gCACA,yCACE,4DAKA,wEAGA,6DASA,6DASA,0CACA,6CAAO,UAAgB,QACzB,iCACA,2CACE,+CACE,U,iBACF,QACF,iCACF,gC,gDArCoB,2BAGD,6DAA2C,cAQ3C,yDASA,wCAUR,2BAIL,qH,4BA1CZ,SACE,2C,gBACE,S,kCACF,QACA,sCACE,sCACE,kDAwCF,6BACF,2BACF,0B,sBA/C6B,0DACzB,sGAIoB,mC,4BAV1B,iBACE,gDAGA,mDAiDF,uB,qBApD+D,yCAG9C,uC,oBCNV,MAAMoB,WAAuC,KAGlDnF,YACEiE,EACAE,EACAC,EACAC,EACQnE,EACAQ,EACR4D,GAEAxD,MAAMmD,EAAeE,EAAcC,EAAkBC,EAAcC,GAJ3D,KAAApE,MAAAA,EACA,KAAAQ,oBAAAA,CAIV,CAEMU,W,0GAEJC,KAAKnB,MAAMqE,OAAOA,OAAOjD,OAAOU,WAAiBV,GAAW,mCAC1DD,KAAKK,mBAAqBL,KAAKX,oBAAoBiB,IAAIL,EAAOG,gBAC9DJ,KAAKmD,wBAA0BnD,KAAK4C,cAAcQ,eAC5C,EAAMrD,SAAQ,UACtB,KACF,G,CAEAuD,gBACE,OAAOtD,KAAK4C,cAAcW,6BAA6BvD,KAAKK,aAAamD,GAC3E,CAEAC,gBAAgBC,GACd,OAAO1D,KAAKmD,kBAAkBQ,MAAMC,GAAMA,EAAEJ,KAAOE,EAAEF,IACvD,E,kCA9BWM,IAA8B,iF,oBAA9BA,GAA8B,mzBDpB3C,iBACE,8BACE,S,gBACA,0BAQF,wBACF,sBACA,2BAAG,U,iBAAwC,QAC3C,wCAQA,wCAsDA,2DACA,gB,MA3EI,qEACQ,8CAUT,wDACG,+CAQa,mC,6ZEnBf,iBACE,mC,gBAKA,sCAAsB,S,gBAAsB,QAC9C,2B,MAJI,6CAGoB,qC,wBAK5B,eACE,+B,gBAKA,kCAAsB,S,gBAAsB,QAC9C,uB,MAJI,6CAGoB,qC,wBAGtB,yB,gBACE,S,gBACF,S,MAF4B,qCAC1B,iE,wBAgBQ,SACE,4C,gBAMA,8CAAsB,S,gBAAqB,QAC7C,mC,MAJI,4CAGoB,oC,wBAExB,SACE,4C,gBAMA,8CAAsB,S,gBAA0B,QAClD,mC,MAJI,iDAGoB,yC,0CAxB5B,cACE,yCACE,uDACF,gCACA,yCACE,0CAAyB,uEAAS,QAAApB,aAAA,GAAe,I,iBAAkC,UAEjF,QACF,6DASA,6DASA,0CACA,6CAAO,UAAgB,QACzB,iCACF,8B,wCA3BoB,2BAGmC,+CAAgC,uBAGpE,yDASA,wCAUR,0B,4BAjCjB,SACE,2C,gBACE,S,kCACF,QACA,sCACE,sCACE,iDA8BF,6BACF,2BACF,0B,sBArC6B,4DACzB,wGAIoB,mC,4BAV1B,iBACE,gDAGA,mDAuCF,uB,qBA1C+D,yCAG9C,uC,oBCPV,MAAMqB,WAAyC,KACpDpF,YACEiE,EACAE,EACAC,EACAC,EACQnE,EACAQ,EACR4D,GAEAxD,MAAMmD,EAAeE,EAAcC,EAAkBC,EAAcC,GAJ3D,KAAApE,MAAAA,EACA,KAAAQ,oBAAAA,CAIV,CAEMU,W,0GAEJC,KAAKnB,MAAMqE,OAAOA,OAAOjD,OAAOU,WAAiBV,GAAW,mCAC1DD,KAAKK,mBAAqBL,KAAKX,oBAAoBiB,IAAIL,EAAOG,sBACxD,EAAML,SAAQ,UACtB,KACF,G,CAEAuD,gBACE,OAAOtD,KAAK4C,cAAcW,6BAA6BvD,KAAKK,aAAamD,GAC3E,E,kCAvBWO,IAAgC,iF,oBAAhCA,GAAgC,stBDnB7C,iBACE,8BACE,S,gBACA,0BAQF,wBACF,sBACA,2BAAG,U,iBAA0C,QAC7C,wCAQA,wCA4CA,2DACA,gB,MAjEI,uEACQ,8CAUT,0DACG,+CAQa,mC,oaEnBf,iBACE,mC,gBAKA,sCAAsB,S,gBAAsB,QAC9C,2B,MAJI,6CAGoB,qC,wBAK5B,eACE,+B,gBAKA,kCAAsB,S,gBAAsB,QAC9C,uB,MAJI,6CAGoB,qC,wBAGtB,yB,gBACE,S,gBACF,S,MAF4B,qCAC1B,6D,0CAaQ,SACE,4CAAyB,+EAAS,QAAArB,aAAA,GAAe,I,gBAAkC,SAEjF,QACJ,iC,mCAHqD,8CAAgC,sB,4BAKnF,4CAAM,SAAY,QACpB,2B,+BADQ,sB,yBAER,SACE,4C,gBAMA,8CAAsB,S,gBAAqB,QAC7C,mC,MAJI,4CAGoB,oC,wBAExB,SACE,4C,gBAMA,8CAAsB,S,gBAA0B,QAClD,mC,MAJI,iDAGoB,yC,2BA7B5B,cACE,yCACE,uDACF,gCACA,yCACE,4DAKA,wEAGA,6DASA,6DASA,0CACA,6CAAO,UAAgB,QACzB,iCACA,2CACE,+CACE,U,iBACF,QACF,iCACF,gC,gDArCoB,2BAGD,6DAA2C,cAQ3C,yDASA,wCAUR,2BAGQ,+DACb,kG,4BA1CZ,SACE,2C,gBACE,S,kCACF,QACA,sCACE,sCACE,kDAwCF,6BACF,2BACF,0B,sBA/C6B,wDACzB,oGAIoB,mC,4BAV1B,iBACE,gDAGA,mDAiDF,uB,qBApD+D,yCAG9C,uC,oBCLV,MAAMsB,WAAqC,KAGhDrF,YACEiE,EACAqB,EACAnB,EACAC,EACAC,EACQnE,EACAQ,EACR4D,GAEAxD,MACEmD,EACAqB,EACAnB,EACAC,EACAC,EACAC,GAVM,KAAApE,MAAAA,EACA,KAAAQ,oBAAAA,CAWV,CAEMU,W,0GAEJC,KAAKnB,MAAMqE,OAAOA,OAAOjD,OAAOU,WAAiBV,GAAW,mCAC1DD,KAAKK,mBAAqBL,KAAKX,oBAAoBiB,IAAIL,EAAOG,gBAC9DJ,KAAKmD,wBAA0BnD,KAAK4C,cAAcQ,eAC5C,EAAMrD,SAAQ,UACtB,KACF,G,CAEAuD,gBACE,OAAOtD,KAAK4C,cAAcW,6BAA6BvD,KAAKK,aAAamD,GAC3E,CAEAC,gBAAgBC,GACd,OAAO1D,KAAKmD,kBAAkBQ,MAAMC,GAAMA,EAAEJ,KAAOE,EAAEF,IACvD,E,kCAtCWQ,IAA4B,6F,oBAA5BA,GAA4B,yyBDrBzC,iBACE,8BACE,S,gBACA,0BAQF,wBACF,sBACA,2BAAG,U,iBAAsC,QACzC,wCAQA,wCAsDA,2DACA,gB,MA3EI,mEACQ,8CAUT,sDACG,+CAQa,mC,iZEhBT,gBAME,S,gBACF,S,MADE,uE,wBAEF,gBAME,S,gBACF,S,MADE,qE,2BAjBN,iBACE,uCAAyB,S,gBAAwB,QACjD,uCACE,8CAQA,gDAQF,+BACF,8B,sBAnB2B,uCAMpB,yDAQA,sD,4BAhBT,iBACE,6CAqBF,2B,qBArBqB,qC,ECQlB,MAAME,GAMXvF,YAAoBE,EAA+BQ,GAA/B,KAAAR,MAAAA,EAA+B,KAAAQ,oBAAAA,EAJnD,KAAA8E,aAAc,EAEN,KAAAtE,SAAW,IAAIC,EAAA,CAEuE,CAE9FC,WACEC,KAAKnB,MAAMoB,OACRC,MACC,EAAAC,EAAA,IAAiBF,GAAW,mCAC1BD,KAAKK,mBAAqBL,KAAKX,oBAAoBiB,IAAIL,EAAOG,gBAC9DJ,KAAKmE,YACHnE,KAAKK,aAAa+D,oBAAsBpE,KAAKK,aAAagE,gBAC9D,OACA,EAAA3D,EAAA,GAAUV,KAAKH,WAEhBc,WACL,CAEA2B,cACEtC,KAAKH,SAAS0C,OACdvC,KAAKH,SAAS2C,UAChB,E,kCAxBW0B,IAAkB,0B,oBAAlBA,GAAkB,2lBDX/B,iBACE,iCACE,0CAuBA,mCACE,6CACF,0BACF,yBACF,uBACA,gB,MA5BwB,qCAuBD,yD,6ZEzBvB,SACE,iCACE,gCAAI,S,gBAAsB,QAC5B,wBAEA,+BAAG,U,iBAA8B,QAEjC,iDACF,wB,qBANQ,qCAGH,8CAEc,mC,yBAOf,eACE,mCACA,S,gBACF,S,MADE,+D,CCJC,MAAMI,GAMX3F,YAAoBqE,EAA4B9D,GAA5B,KAAA8D,aAAAA,EAHpB,KAAAuB,UAAW,EACH,KAAAC,UAA2B,IAAI1E,EAAA,EAGrCZ,EAAOuF,OACJvE,MACC,EAAAwE,GAAA,IAAQC,GAAUA,aAAiB,QACnC,EAAAjE,EAAA,GAAUV,KAAKwE,YAEhB7D,WAAWgE,IACV3E,KAAKuE,SAAYI,EAAwBC,kBAAkBC,SAAS,WAAW,GAErF,CAEM9E,W,0CACJ,MAEM+E,SAFuB9E,KAAKgD,aAAa+B,uBAG3C,aACA,qBAEJ/E,KAAKgF,QAAU,C,+BAERA,EAAA,GAAQ,wBAA4B,CACvCC,QAASH,I,+BAGNE,EAAA,GAAQ,uBAA2B,CACtCC,QAASH,I,+BAGNE,EAAA,GAAQ,qBAAyB,CACpCC,QAASH,I,+BAGNE,EAAA,GAAQ,yBAA6B,CACxCC,QAASH,I,+BAGNE,EAAA,GAAQ,mBAAuB,CAClCC,QAASH,IAGf,G,CAEAxC,cACEtC,KAAKwE,UAAUjC,OACfvC,KAAKwE,UAAUhC,UACjB,E,kCAnDW8B,IAAoB,yB,oBAApBA,GAAoB,gSDZjC,kCAUA,yCAEA,iCACE,iCACE,wCAIF,wBACF,uBACA,gB,MApBe,yBAcmB,mC,+DEIlC,MAAMY,GAAiB,CACrB,CACEC,KAAM,GACNC,UAAWlB,GACXmB,YAAa,CAAC,KACdxE,KAAM,CAAEyE,wBAAyB,MACjCC,SAAU,CACR,CACEJ,KAAM,GACNK,UAAW,OACXH,YAAa,CAAC,KACdxE,KAAM,CACJ4E,qBA8DV,SAAwBpF,GACtB,GAAIA,EAAa+D,mBACf,MAAO,SAET,GAAI/D,EAAagE,iBACf,MAAO,UAET,MACF,GApEQkB,SAAU,IAEZ,CACEJ,KAAM,UACNC,UAAWd,GACXe,YAAa,CAAC,KACdxE,KAAM,CACJ6E,QAAS,WAEXH,SAAU,CACR,CACEJ,KAAM,2BACNC,UAAWzC,GACX9B,KAAM,CACJ6E,QAAS,2BAGb,CACEP,KAAM,6BACNC,UAAWvB,GACXhD,KAAM,CACJ6E,QAAS,sBAGb,CACEP,KAAM,0BACNC,UAAWtB,GACXjD,KAAM,CACJ6E,QAAS,0BAGb,CACEP,KAAM,4BACNC,UAAWrB,GACXlD,KAAM,CACJ6E,QAAS,4BAGb,CACEP,KAAM,wBACNC,UAAWpB,GACXnD,KAAM,CACJ6E,QAAS,0BAKjB,CACEP,KAAM,SACNC,UAAW1G,EACX2G,YAAa,CAAC,KACdxE,KAAM,CACJ6E,QAAS,YACTJ,wBAA0BK,GAAsBA,EAAIvB,wBAqBvD,MAAMwB,I,kCAAAA,GAAkC,E,oBAAlCA,K,wBAHD,cAAsBV,IACtB,QC3FL,MAAMW,I,kCAAAA,GAA2B,E,oBAA3BA,K,wBAHD,IAAc,KAAqBD,K","sources":["webpack://@bitwarden/web-vault/../../libs/common/src/enums/event-system-user.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/events.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/events.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/exposed-passwords-report.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/tools/exposed-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/inactive-two-factor-report.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/tools/inactive-two-factor-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/reused-passwords-report.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/tools/reused-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/unsecured-websites-report.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/tools/unsecured-websites-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/weak-passwords-report.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/tools/weak-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/reporting/reporting.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/reporting/reporting.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/reporting/reports-home.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/reporting/reports-home.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/reporting/organization-reporting-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/reporting/organization-reporting.module.ts"],"sourcesContent":["// Note: the enum key is used to describe the EventSystemUser in the UI. Be careful about changing it.\nexport enum EventSystemUser {\n  SCIM = 1,\n}\n","<div class=\"tw-mb-4\">\n  <h1>{{ \"eventLogs\" | i18n }}</h1>\n  <div class=\"tw-mt-4 tw-flex tw-items-center\">\n    <bit-form-field>\n      <bit-label>{{ \"from\" | i18n }}</bit-label>\n      <input\n        bitInput\n        type=\"datetime-local\"\n        placeholder=\"{{ 'startDate' | i18n }}\"\n        [(ngModel)]=\"start\"\n        (change)=\"dirtyDates = true\"\n      />\n    </bit-form-field>\n    <span class=\"tw-mx-2\">-</span>\n    <bit-form-field>\n      <bit-label>{{ \"to\" | i18n }}</bit-label>\n      <input\n        bitInput\n        type=\"datetime-local\"\n        placeholder=\"{{ 'endDate' | i18n }}\"\n        [(ngModel)]=\"end\"\n        (change)=\"dirtyDates = true\"\n      />\n    </bit-form-field>\n    <form #refreshForm [appApiAction]=\"refreshPromise\">\n      <button\n        class=\"tw-mx-3 tw-mt-1\"\n        type=\"button\"\n        bitButton\n        buttonType=\"primary\"\n        (click)=\"loadEvents(true)\"\n        [disabled]=\"loaded && refreshForm.loading\"\n      >\n        {{ \"update\" | i18n }}\n      </button>\n    </form>\n    <form #exportForm [appApiAction]=\"exportPromise\">\n      <button\n        type=\"button\"\n        class=\"tw-mt-1\"\n        bitButton\n        [ngClass]=\"{ loading: exportForm.loading }\"\n        (click)=\"exportEvents()\"\n        [disabled]=\"(loaded && exportForm.loading) || dirtyDates\"\n      >\n        <span>{{ \"export\" | i18n }}</span>\n        <i\n          class=\"bwi bwi-fw\"\n          aria-hidden=\"true\"\n          [ngClass]=\"{\n            'bwi-sign-in': !exportForm.loading,\n            'bwi-spinner bwi-spin': exportForm.loading\n          }\"\n        ></i>\n      </button>\n    </form>\n  </div>\n</div>\n<ng-container *ngIf=\"!loaded\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"loaded\">\n  <p *ngIf=\"!events || !events.length\">{{ \"noEventsInList\" | i18n }}</p>\n  <bit-table *ngIf=\"events && events.length\">\n    <ng-container header>\n      <tr>\n        <th bitCell>{{ \"timestamp\" | i18n }}</th>\n        <th bitCell>{{ \"client\" | i18n }}</th>\n        <th bitCell>{{ \"member\" | i18n }}</th>\n        <th bitCell>{{ \"event\" | i18n }}</th>\n      </tr>\n    </ng-container>\n    <ng-container body>\n      <tr bitRow *ngFor=\"let e of events\" alignContent=\"top\">\n        <td bitCell class=\"tw-whitespace-nowrap\">{{ e.date | date: \"medium\" }}</td>\n        <td bitCell>\n          <span title=\"{{ e.appName }}, {{ e.ip }}\">{{ e.appName }}</span>\n        </td>\n        <td bitCell>\n          <span title=\"{{ e.userEmail }}\">{{ e.userName }}</span>\n        </td>\n        <td bitCell [innerHTML]=\"e.message\"></td>\n      </tr>\n    </ng-container>\n  </bit-table>\n  <button\n    #moreBtn\n    [appApiAction]=\"morePromise\"\n    type=\"button\"\n    bitButton\n    buttonType=\"primary\"\n    (click)=\"loadEvents(false)\"\n    [disabled]=\"loaded && $any(moreBtn).loading\"\n    *ngIf=\"continuationToken\"\n  >\n    <i\n      class=\"bwi bwi-spinner bwi-spin\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n      *ngIf=\"moreBtn.loading\"\n    ></i>\n    <span>{{ \"loadMore\" | i18n }}</span>\n  </button>\n</ng-container>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { concatMap, Subject, takeUntil } from \"rxjs\";\n\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { ExportService } from \"@bitwarden/common/abstractions/export.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { EventSystemUser } from \"@bitwarden/common/enums/event-system-user\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { EventResponse } from \"@bitwarden/common/models/response/event.response\";\n\nimport { BaseEventsComponent } from \"../../common/base.events.component\";\nimport { EventService } from \"../../core\";\n\n@Component({\n  selector: \"app-org-events\",\n  templateUrl: \"events.component.html\",\n})\nexport class EventsComponent extends BaseEventsComponent implements OnInit, OnDestroy {\n  exportFileName = \"org-events\";\n  organizationId: string;\n  organization: Organization;\n\n  private orgUsersUserIdMap = new Map<string, any>();\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    eventService: EventService,\n    i18nService: I18nService,\n    exportService: ExportService,\n    platformUtilsService: PlatformUtilsService,\n    private router: Router,\n    logService: LogService,\n    private userNamePipe: UserNamePipe,\n    private organizationService: OrganizationService,\n    private organizationUserService: OrganizationUserService,\n    private providerService: ProviderService,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      eventService,\n      i18nService,\n      exportService,\n      platformUtilsService,\n      logService,\n      fileDownloadService\n    );\n  }\n\n  async ngOnInit() {\n    this.route.params\n      .pipe(\n        concatMap(async (params) => {\n          this.organizationId = params.organizationId;\n          this.organization = await this.organizationService.get(this.organizationId);\n          if (this.organization == null || !this.organization.useEvents) {\n            await this.router.navigate([\"/organizations\", this.organizationId]);\n            return;\n          }\n          await this.load();\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  async load() {\n    const response = await this.organizationUserService.getAllUsers(this.organizationId);\n    response.data.forEach((u) => {\n      const name = this.userNamePipe.transform(u);\n      this.orgUsersUserIdMap.set(u.userId, { name: name, email: u.email });\n    });\n\n    if (this.organization.providerId != null) {\n      try {\n        const provider = await this.providerService.get(this.organization.providerId);\n        if (\n          provider != null &&\n          (await this.providerService.get(this.organization.providerId)).canManageUsers\n        ) {\n          const providerUsersResponse = await this.apiService.getProviderUsers(\n            this.organization.providerId\n          );\n          providerUsersResponse.data.forEach((u) => {\n            const name = this.userNamePipe.transform(u);\n            this.orgUsersUserIdMap.set(u.userId, {\n              name: `${name} (${this.organization.providerName})`,\n              email: u.email,\n            });\n          });\n        }\n      } catch (e) {\n        this.logService.warning(e);\n      }\n    }\n\n    await this.loadEvents(true);\n    this.loaded = true;\n  }\n\n  protected requestEvents(startDate: string, endDate: string, continuationToken: string) {\n    return this.apiService.getEventsOrganization(\n      this.organizationId,\n      startDate,\n      endDate,\n      continuationToken\n    );\n  }\n\n  protected getUserName(r: EventResponse, userId: string) {\n    if (r.installationId != null) {\n      return `Installation: ${r.installationId}`;\n    }\n\n    if (userId != null) {\n      if (this.orgUsersUserIdMap.has(userId)) {\n        return this.orgUsersUserIdMap.get(userId);\n      }\n\n      if (r.providerId != null && r.providerId === this.organization.providerId) {\n        return {\n          name: this.organization.providerName,\n        };\n      }\n    }\n\n    if (r.systemUser != null) {\n      return {\n        name: EventSystemUser[r.systemUser],\n      };\n    }\n\n    return null;\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"exposedPasswordsReport\" | i18n }}</h1>\n</div>\n<p>{{ \"exposedPasswordsReportDesc\" | i18n }}</p>\n<button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"loading\" (click)=\"load()\">\n  {{ \"checkExposedPasswords\" | i18n }}\n</button>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noExposedPasswords\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'exposedPasswordsFound' | i18n }}\" [useAlertRole]=\"true\">\n      {{ \"exposedPasswordsFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <ng-container *ngIf=\"!organization || canManageCipher(c); else cantManage\">\n              <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n                c.name\n              }}</a>\n            </ng-container>\n            <ng-template #cantManage>\n              <span>{{ c.name }}</span>\n            </ng-template>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"text-right\">\n            <span bitBadge badgeType=\"warning\">\n              {{ \"exposedXTimes\" | i18n: (exposedPasswordMap.get(c.id) | number) }}\n            </span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\n// eslint-disable-next-line no-restricted-imports\nimport { ExposedPasswordsReportComponent as BaseExposedPasswordsReportComponent } from \"../../reports/pages/exposed-passwords-report.component\";\n\n@Component({\n  selector: \"app-org-exposed-passwords-report\",\n  templateUrl: \"../../reports/pages/exposed-passwords-report.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class ExposedPasswordsReportComponent extends BaseExposedPasswordsReportComponent {\n  manageableCiphers: Cipher[];\n\n  constructor(\n    cipherService: CipherService,\n    auditService: AuditService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    private organizationService: OrganizationService,\n    private route: ActivatedRoute,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(\n      cipherService,\n      auditService,\n      modalService,\n      messagingService,\n      stateService,\n      passwordRepromptService\n    );\n  }\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      this.manageableCiphers = await this.cipherService.getAll();\n      await this.checkAccess();\n    });\n  }\n\n  getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n  }\n\n  canManageCipher(c: CipherView): boolean {\n    return this.manageableCiphers.some((x) => x.id === c.id);\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"inactive2faReport\" | i18n }}\n    <small *ngIf=\"hasLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<p>{{ \"inactive2faReportDesc\" | i18n }}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noInactive2fa\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'inactive2faFound' | i18n }}\">\n      {{ \"inactive2faFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n              c.name\n            }}</a>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"text-right\">\n            <a\n              bitBadge\n              href=\"{{ cipherDocs.get(c.id) }}\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              *ngIf=\"cipherDocs.has(c.id)\"\n            >\n              {{ \"instructions\" | i18n }}</a\n            >\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\n// eslint-disable-next-line no-restricted-imports\nimport { InactiveTwoFactorReportComponent as BaseInactiveTwoFactorReportComponent } from \"../../reports/pages/inactive-two-factor-report.component\";\n\n@Component({\n  selector: \"app-inactive-two-factor-report\",\n  templateUrl: \"../../reports/pages/inactive-two-factor-report.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class InactiveTwoFactorReportComponent extends BaseInactiveTwoFactorReportComponent {\n  constructor(\n    cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    private route: ActivatedRoute,\n    logService: LogService,\n    passwordRepromptService: PasswordRepromptService,\n    private organizationService: OrganizationService\n  ) {\n    super(\n      cipherService,\n      modalService,\n      messagingService,\n      stateService,\n      logService,\n      passwordRepromptService\n    );\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      await super.ngOnInit();\n    });\n  }\n\n  getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"reusedPasswordsReport\" | i18n }}\n    <small *ngIf=\"hasLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<p>{{ \"reusedPasswordsReportDesc\" | i18n }}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noReusedPasswords\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'reusedPasswordsFound' | i18n }}\">\n      {{ \"reusedPasswordsFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <ng-container *ngIf=\"!organization || canManageCipher(c); else cantManage\">\n              <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n                c.name\n              }}</a>\n            </ng-container>\n            <ng-template #cantManage>\n              <span>{{ c.name }}</span>\n            </ng-template>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"text-right\">\n            <span bitBadge badgeType=\"warning\">\n              {{ \"reusedXTimes\" | i18n: passwordUseMap.get(c.login.password) }}\n            </span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\n// eslint-disable-next-line no-restricted-imports\nimport { ReusedPasswordsReportComponent as BaseReusedPasswordsReportComponent } from \"../../reports/pages/reused-passwords-report.component\";\n\n@Component({\n  selector: \"app-reused-passwords-report\",\n  templateUrl: \"../../reports/pages/reused-passwords-report.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class ReusedPasswordsReportComponent extends BaseReusedPasswordsReportComponent {\n  manageableCiphers: Cipher[];\n\n  constructor(\n    cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(cipherService, modalService, messagingService, stateService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      this.manageableCiphers = await this.cipherService.getAll();\n      await super.ngOnInit();\n    });\n  }\n\n  getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n  }\n\n  canManageCipher(c: CipherView): boolean {\n    return this.manageableCiphers.some((x) => x.id === c.id);\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"unsecuredWebsitesReport\" | i18n }}\n    <small *ngIf=\"hasLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<p>{{ \"unsecuredWebsitesReportDesc\" | i18n }}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noUnsecuredWebsites\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'unsecuredWebsitesFound' | i18n }}\">\n      {{ \"unsecuredWebsitesFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n              c.name\n            }}</a>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\n// eslint-disable-next-line no-restricted-imports\nimport { UnsecuredWebsitesReportComponent as BaseUnsecuredWebsitesReportComponent } from \"../../reports/pages/unsecured-websites-report.component\";\n\n@Component({\n  selector: \"app-unsecured-websites-report\",\n  templateUrl: \"../../reports/pages/unsecured-websites-report.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class UnsecuredWebsitesReportComponent extends BaseUnsecuredWebsitesReportComponent {\n  constructor(\n    cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(cipherService, modalService, messagingService, stateService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      await super.ngOnInit();\n    });\n  }\n\n  getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"weakPasswordsReport\" | i18n }}\n    <small *ngIf=\"hasLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<p>{{ \"weakPasswordsReportDesc\" | i18n }}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noWeakPasswords\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'weakPasswordsFound' | i18n }}\">\n      {{ \"weakPasswordsFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <ng-container *ngIf=\"!organization || canManageCipher(c); else cantManage\">\n              <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n                c.name\n              }}</a>\n            </ng-container>\n            <ng-template #cantManage>\n              <span>{{ c.name }}</span>\n            </ng-template>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"text-right\">\n            <span bitBadge [badgeType]=\"passwordStrengthMap.get(c.id)[1]\">\n              {{ passwordStrengthMap.get(c.id)[0] | i18n }}\n            </span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\n// eslint-disable-next-line no-restricted-imports\nimport { WeakPasswordsReportComponent as BaseWeakPasswordsReportComponent } from \"../../reports/pages/weak-passwords-report.component\";\n\n@Component({\n  selector: \"app-weak-passwords-report\",\n  templateUrl: \"../../reports/pages/weak-passwords-report.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class WeakPasswordsReportComponent extends BaseWeakPasswordsReportComponent {\n  manageableCiphers: Cipher[];\n\n  constructor(\n    cipherService: CipherService,\n    passwordGenerationService: PasswordGenerationService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(\n      cipherService,\n      passwordGenerationService,\n      modalService,\n      messagingService,\n      stateService,\n      passwordRepromptService\n    );\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      this.manageableCiphers = await this.cipherService.getAll();\n      await super.ngOnInit();\n    });\n  }\n\n  getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n  }\n\n  canManageCipher(c: CipherView): boolean {\n    return this.manageableCiphers.some((x) => x.id === c.id);\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\" *ngIf=\"showLeftNav\">\n      <div class=\"card\" *ngIf=\"organization\">\n        <div class=\"card-header\">{{ \"reporting\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a\n            routerLink=\"events\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canAccessEventLogs\"\n          >\n            {{ \"eventLogs\" | i18n }}\n          </a>\n          <a\n            routerLink=\"reports\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canAccessReports\"\n          >\n            {{ \"reports\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\" [ngClass]=\"showLeftNav ? 'col-9' : 'col-12'\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { concatMap, Subject, takeUntil } from \"rxjs\";\n\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"app-org-reporting\",\n  templateUrl: \"reporting.component.html\",\n})\nexport class ReportingComponent implements OnInit, OnDestroy {\n  organization: Organization;\n  showLeftNav = true;\n\n  private destroy$ = new Subject<void>();\n\n  constructor(private route: ActivatedRoute, private organizationService: OrganizationService) {}\n\n  ngOnInit() {\n    this.route.params\n      .pipe(\n        concatMap(async (params) => {\n          this.organization = await this.organizationService.get(params.organizationId);\n          this.showLeftNav =\n            this.organization.canAccessEventLogs && this.organization.canAccessReports;\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","<ng-container *ngIf=\"homepage\">\n  <div class=\"page-header\">\n    <h1>{{ \"reports\" | i18n }}</h1>\n  </div>\n\n  <p>{{ \"orgsReportsDesc\" | i18n }}</p>\n\n  <app-report-list [reports]=\"reports\"></app-report-list>\n</ng-container>\n\n<router-outlet></router-outlet>\n\n<div class=\"row mt-4\">\n  <div class=\"col\">\n    <a bitButton routerLink=\"./\" *ngIf=\"!homepage\">\n      <i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i>\n      {{ \"backToReports\" | i18n }}\n    </a>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { NavigationEnd, Router } from \"@angular/router\";\nimport { filter, Subject, takeUntil } from \"rxjs\";\n\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\nimport { ReportVariant, reports, ReportType, ReportEntry } from \"../../reports\";\n\n@Component({\n  selector: \"app-org-reports-home\",\n  templateUrl: \"reports-home.component.html\",\n})\nexport class ReportsHomeComponent implements OnInit, OnDestroy {\n  reports: ReportEntry[];\n\n  homepage = true;\n  private destrory$: Subject<void> = new Subject<void>();\n\n  constructor(private stateService: StateService, router: Router) {\n    router.events\n      .pipe(\n        filter((event) => event instanceof NavigationEnd),\n        takeUntil(this.destrory$)\n      )\n      .subscribe((event) => {\n        this.homepage = (event as NavigationEnd).urlAfterRedirects.endsWith(\"/reports\");\n      });\n  }\n\n  async ngOnInit(): Promise<void> {\n    const userHasPremium = await this.stateService.getCanAccessPremium();\n\n    const reportRequiresPremium = userHasPremium\n      ? ReportVariant.Enabled\n      : ReportVariant.RequiresPremium;\n\n    this.reports = [\n      {\n        ...reports[ReportType.ExposedPasswords],\n        variant: reportRequiresPremium,\n      },\n      {\n        ...reports[ReportType.ReusedPasswords],\n        variant: reportRequiresPremium,\n      },\n      {\n        ...reports[ReportType.WeakPasswords],\n        variant: reportRequiresPremium,\n      },\n      {\n        ...reports[ReportType.UnsecuredWebsites],\n        variant: reportRequiresPremium,\n      },\n      {\n        ...reports[ReportType.Inactive2fa],\n        variant: reportRequiresPremium,\n      },\n    ];\n  }\n\n  ngOnDestroy(): void {\n    this.destrory$.next();\n    this.destrory$.complete();\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { canAccessReportingTab } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nimport { OrganizationPermissionsGuard } from \"../guards/org-permissions.guard\";\nimport { OrganizationRedirectGuard } from \"../guards/org-redirect.guard\";\nimport { EventsComponent } from \"../manage/events.component\";\nimport { ExposedPasswordsReportComponent } from \"../tools/exposed-passwords-report.component\";\nimport { InactiveTwoFactorReportComponent } from \"../tools/inactive-two-factor-report.component\";\nimport { ReusedPasswordsReportComponent } from \"../tools/reused-passwords-report.component\";\nimport { UnsecuredWebsitesReportComponent } from \"../tools/unsecured-websites-report.component\";\nimport { WeakPasswordsReportComponent } from \"../tools/weak-passwords-report.component\";\n\nimport { ReportingComponent } from \"./reporting.component\";\nimport { ReportsHomeComponent } from \"./reports-home.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: ReportingComponent,\n    canActivate: [OrganizationPermissionsGuard],\n    data: { organizationPermissions: canAccessReportingTab },\n    children: [\n      {\n        path: \"\",\n        pathMatch: \"full\",\n        canActivate: [OrganizationRedirectGuard],\n        data: {\n          autoRedirectCallback: getReportRoute,\n        },\n        children: [], // This is required to make the auto redirect work,\n      },\n      {\n        path: \"reports\",\n        component: ReportsHomeComponent,\n        canActivate: [OrganizationPermissionsGuard],\n        data: {\n          titleId: \"reports\",\n        },\n        children: [\n          {\n            path: \"exposed-passwords-report\",\n            component: ExposedPasswordsReportComponent,\n            data: {\n              titleId: \"exposedPasswordsReport\",\n            },\n          },\n          {\n            path: \"inactive-two-factor-report\",\n            component: InactiveTwoFactorReportComponent,\n            data: {\n              titleId: \"inactive2faReport\",\n            },\n          },\n          {\n            path: \"reused-passwords-report\",\n            component: ReusedPasswordsReportComponent,\n            data: {\n              titleId: \"reusedPasswordsReport\",\n            },\n          },\n          {\n            path: \"unsecured-websites-report\",\n            component: UnsecuredWebsitesReportComponent,\n            data: {\n              titleId: \"unsecuredWebsitesReport\",\n            },\n          },\n          {\n            path: \"weak-passwords-report\",\n            component: WeakPasswordsReportComponent,\n            data: {\n              titleId: \"weakPasswordsReport\",\n            },\n          },\n        ],\n      },\n      {\n        path: \"events\",\n        component: EventsComponent,\n        canActivate: [OrganizationPermissionsGuard],\n        data: {\n          titleId: \"eventLogs\",\n          organizationPermissions: (org: Organization) => org.canAccessEventLogs,\n        },\n      },\n    ],\n  },\n];\n\nfunction getReportRoute(organization: Organization): string {\n  if (organization.canAccessEventLogs) {\n    return \"events\";\n  }\n  if (organization.canAccessReports) {\n    return \"reports\";\n  }\n  return undefined;\n}\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OrganizationReportingRoutingModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { ReportsSharedModule } from \"../../reports\";\nimport { SharedModule } from \"../../shared/shared.module\";\n\nimport { OrganizationReportingRoutingModule } from \"./organization-reporting-routing.module\";\nimport { ReportingComponent } from \"./reporting.component\";\nimport { ReportsHomeComponent } from \"./reports-home.component\";\n\n@NgModule({\n  imports: [SharedModule, ReportsSharedModule, OrganizationReportingRoutingModule],\n  declarations: [ReportsHomeComponent, ReportingComponent],\n})\nexport class OrganizationReportingModule {}\n"],"names":["EventSystemUser","loadEvents","EventsComponent","constructor","apiService","route","eventService","i18nService","exportService","platformUtilsService","router","logService","userNamePipe","organizationService","organizationUserService","providerService","fileDownloadService","super","exportFileName","orgUsersUserIdMap","Map","destroy$","Subject","ngOnInit","this","params","pipe","concatMap","organizationId","organization","get","useEvents","load","navigate","takeUntil","subscribe","getAllUsers","data","forEach","u","name","transform","set","userId","email","providerId","canManageUsers","getProviderUsers","providerName","e","warning","loaded","requestEvents","startDate","endDate","continuationToken","getEventsOrganization","getUserName","r","installationId","has","systemUser","ngOnDestroy","next","complete","exportEvents","selectCipher","ExposedPasswordsReportComponent","cipherService","auditService","modalService","messagingService","stateService","passwordRepromptService","parent","manageableCiphers","getAll","checkAccess","getAllCiphers","getAllFromApiForOrganization","id","canManageCipher","c","some","x","InactiveTwoFactorReportComponent","ReusedPasswordsReportComponent","UnsecuredWebsitesReportComponent","WeakPasswordsReportComponent","passwordGenerationService","ReportingComponent","showLeftNav","canAccessEventLogs","canAccessReports","ReportsHomeComponent","homepage","destrory$","events","filter","event","urlAfterRedirects","endsWith","reportRequiresPremium","getCanAccessPremium","reports","variant","routes","path","component","canActivate","organizationPermissions","children","pathMatch","autoRedirectCallback","titleId","org","OrganizationReportingRoutingModule","OrganizationReportingModule"],"sourceRoot":""}